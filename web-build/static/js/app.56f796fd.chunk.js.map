{"version":3,"sources":["src/Playscreen.js","App.js","signs/rock.png","signs/paper.png","signs/scissors.png"],"names":["rock","require","paper","scissors","bgcolor","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","fontSize","img","width","height","button1","position","bottom","PlayScreen","useState","counter","setcounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Math","floor","random","Button","onPress","title","App","play","setplay","marginBottom","marginTop","module","exports"],"mappings":"gMAGMA,EAAOC,EAAQ,IACfC,EAAQD,EAAQ,IAChBE,EAAWF,EAAQ,IAQnBG,EAAU,CAAC,UAAU,UAAU,WA8B7BC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAO,CACLC,SAAU,KAEZC,IAAI,CACFC,MAAM,IACNC,OAAO,KAETC,QAAQ,CACNC,SAAS,WACTC,OAAO,MAIIC,EAhDE,WAEjB,MAA2BC,mBAAS,GAApC,WAAOC,EAAP,KAAeC,EAAf,KAYE,OAXAC,qBAAU,WACL,GAAe,IAAZF,EAAH,CACE,IAAMG,EAAQC,YAAW,WACtBH,EAAWD,EAAQ,KACpB,KACF,OAAM,WACFK,aAAaF,OAElB,CAACH,IAIH,cAACM,EAAA,EAAD,CAAMC,MAAOxB,IAAWyB,QAAS1B,EAAOG,UAAU,CAACE,gBAAgBN,EAAQmB,EAAQ,KAAnF,SACMA,EAAU,EAAK,cAACS,EAAA,EAAD,CAAMF,MAAOzB,EAAOQ,OAApB,SAA6BU,IAC7C,qCACD,cAACU,EAAA,EAAD,CAAOH,MAAOzB,EAAOU,IAAKmB,OAzBvB,CAAClC,EAAKE,EAAMC,GACZgC,KAAKC,MAAoB,EAAdD,KAAKE,aAyBnB,cAACR,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QAApB,SACA,cAACoB,EAAA,EAAD,CAASC,QAAS,kBAAKf,EAAW,IAAIgB,MAAM,uBChCzC,SAASC,IAErB,MAAsBnB,oBAAS,GAA/B,WAAOoB,EAAP,KAAYC,EAAZ,KACD,OACED,EAAQ,cAAC,EAAD,IACZ,eAACb,EAAA,EAAD,CAAMC,MAAOzB,EAAOG,UAApB,UACM,cAACwB,EAAA,EAAD,CAAMF,MAAOzB,EAAOQ,OAApB,iCACA,cAACmB,EAAA,EAAD,CAAMF,MAAO,CAAChB,SAAS,IAAvB,wCACA,cAACe,EAAA,EAAD,CAAMC,MAAOzB,EAAOiC,OAApB,SACA,cAACA,EAAA,EAAD,CAAQC,QAAS,kBAAII,GAAQ,IAAQH,MAAM,WAE1C,cAACR,EAAA,EAAD,CAAMF,MAAOzB,EAAOe,OAApB,iCAMP,IAAMf,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBC,OAAO,CACLC,SAAU,GACV8B,aAAa,IAEbN,OAAO,CACLtB,MAAM,IACN6B,UAAU,KAEZzB,OAAO,CACLyB,UAAU,GACV/B,SAAS,O,uDCrCfgC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.56f796fd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {Image, Button, StyleSheet,Text,View} from \"react-native\";\r\n\r\nconst rock = require('../signs/rock.png');\r\nconst paper = require('../signs/paper.png');\r\nconst scissors = require('../signs/scissors.png');\r\n\r\nconst rps=()=>{\r\n  const sign = [rock,paper,scissors];\r\n  const rand = Math.floor(Math.random()*3);\r\n  return sign[rand];\r\n};\r\n\r\nconst bgcolor = ['#1abc9c','#3498db','#9b59b6']; \r\n\r\nconst PlayScreen = ()=>{\r\n  \r\n  const [counter,setcounter]=useState(3);\r\n    useEffect(()=>{\r\n         if(counter === 0 )return; \r\n           const timer = setTimeout(()=>{\r\n              setcounter(counter-1);\r\n           },500);\r\n           return()=>{\r\n               clearTimeout(timer);\r\n           }\r\n        },[counter] \r\n       );\r\n\r\n    return (\r\n        <View style={StyleSheet.compose (styles.container,{backgroundColor:bgcolor[counter-1]})}>\r\n            { counter > 0 ? (<Text style={styles.header}>{counter}</Text>):\r\n            (<>\r\n            <Image style={styles.img} source={rps()} />\r\n            <View style={styles.button1}>\r\n            <Button  onPress={()=> setcounter(3)} title=\"PLAY AGAIN\"/>\r\n            </View>\r\n            </>\r\n            )} \r\n          </View>\r\n      );\r\n};\r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    header:{\r\n      fontSize: 150,\r\n      },\r\n    img:{\r\n      width:200,\r\n      height:200,\r\n    },\r\n    button1:{\r\n      position:\"absolute\",\r\n      bottom:25,\r\n    }\r\n  });\r\n\r\n  export default PlayScreen;","import { useState } from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport PlayScreen from './src/Playscreen';\nexport default function App() {\n\n   const [play,setplay]= useState(false)\n  return (\n    play ? (<PlayScreen/>):(\n<View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{fontSize:70}}>✊ ✋ ✌️</Text>\n      <View style={styles.Button}>\n      <Button onPress={()=>setplay(true)}  title='play'/>\n       </View>\n       <Text style={styles.bottom}>Design by Hemant</Text>\n    </View>\n    )\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header:{\n    fontSize: 30,\n    marginBottom:50,\n    },\n    Button:{\n      width:280,  \n      marginTop:150,\n    },\n    bottom:{\n      marginTop:20,\n      fontSize:25,\n    }\n});\n","module.exports = __webpack_public_path__ + \"static/media/rock.337d558c.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.d4a03a15.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.004f1986.png\";"],"sourceRoot":""}